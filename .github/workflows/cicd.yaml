name: CICD

on:
  # Run CICD for non-draft pull request
  pull_request:
    branches:
      - main
  # Also run when the pull request merges (which generates a push)
  # So that we can tag the docker image appropriately.
  push:
    branches:
      - prod
      - main

jobs:
  CICD:
    runs-on: self-hosted

    steps:

    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Build docker image
      run: docker build -t myria3d .

    - name: Check code neatness (linter)
      run: docker run myria3d flake8

    - name: Fast unit tests first
      run: >
        docker run
        -v /var/data/cicd/CICD_github_assets/myria3d_B2V0.5/inputs/:/myria3d/tests/data/large/
        --ipc=host
        myria3d
        python -m
        pytest -rA -v -m "not slow"
        --ignore=actions-runner

    - name: Full module run on LAS subset
      run: >
        docker run
        -v /var/data/cicd/CICD_github_assets/myria3d_B2V0.5/inputs/:/inputs/
        -v /var/data/cicd/CICD_github_assets/myria3d_B2V0.5/outputs/:/outputs/
        --ipc=host
        --shm-size=2gb
        myria3d
        python -m 
        myria3d.predict
        --config-path /inputs/
        --config-name predict_config_V2.3.0.yaml
        predict.src_las=/inputs/792000_6272000_subset_buildings.las
        predict.output_dir=/outputs/
        predict.ckpt_path=/inputs/RandLaNet_Buildings_B2V0.5_epoch_033.ckpt
        datamodule.batch_size=25
        hydra.run.dir=/myria3d

    # Always run with --ipc=host and --shm-size=2gb (at least) to enable sufficient shared memory when predicting on large data
    # Those are too slow to be useful for continuous integration considering the action-runner, and commented for now.
    # - name: Slow unit tests last, using large files stored in self-hosted action-runner.
    #   if: github.event_name == 'push'
    #   run: >
    #     docker run
    #     -v /var/data/cicd/CICD_github_assets/myria3d_B2V0.5/inputs/:/myria3d/tests/data/large/
    #     --ipc=host
    #     --shm-size=5gb
    #     myria3d
    #     python -m
    #     pytest -rA -v -m "slow" 
    #     --ignore=actions-runner

    # Everything ran so we tag the valid docker image to keep it
    # This happens for push events, which are in particular 
    # triggered when a pull request is merged.
    - name: Get the branch name into an environment variable.
      if: github.event_name == 'push'
      uses: nelonoel/branch-name@v1.0.1

    - name: Print the branch name
      if: github.event_name == 'push'
      run: echo ${BRANCH_NAME}

    - name: Tag the docker image with branch name
      if: github.event_name == 'push'
      run: docker tag myria3d:latest myria3d:${BRANCH_NAME}

    - name: Run the new, tagged image at least once so that is it not prunned by mistake when using docker system prune
      if: github.event_name == 'push'
      run: docker run myria3d:${BRANCH_NAME} bash

    # This needs writing rights to the mounted path
    - name: Save the docker image as myria3d_${BRANCH_NAME}.tar
      if: github.event_name == 'push'
      run: docker save myria3d:${BRANCH_NAME} -o /var/data/cicd/CICD_github_assets/CICD_docker_images/myria3d_${BRANCH_NAME}.tar

    - name: Clean dangling docker images
      if: always()  # always do it, even if something failed
      run: docker system prune --force # remove dangling docker images, without asking user for confirmation


      
